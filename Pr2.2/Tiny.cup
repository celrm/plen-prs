package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoTiny;
import alex.UnidadLexica;
import errors.GestionErroresTiny;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresTiny errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresTiny();
   AnalizadorLexicoTiny alex = (AnalizadorLexicoTiny)getScanner();
   //alex.fijaGestionErrores(errores);
:};


terminal    Num, Iden, 
            OpGE, OpLE, OpEQ, OpNEQ,
            Mas, Menos, Por, Div,
            Lb, Rb,
            Coma,
            Ass, Print, Concat, Lreduce, Lmap, Lfilter 
            ;

non terminal  
    PROG, INST, LINST, LISTA, BLISTA,
    DENTRO, COMITAS, ELEM, 
    OPREL, OPAR, OP0, OP1 ;


PROG    ::= LINST ;
LINST    ::= INST LINST | ;
INST     ::= Iden Ass LISTA
          | Print LISTA ;
          

OPREL     ::= OpGE | OpLE | OpEQ | OpNEQ ;
OPAR      ::= OP0 | OP1 ;
OP0     ::= Mas | Menos ;
OP1     ::= Por | Div ;

LISTA   ::= Iden BLISTA
        | Lreduce OPAR LISTA BLISTA
        | Lmap OPAR Num LISTA BLISTA
        | Lfilter OPREL Num LISTA BLISTA
        | Lb DENTRO Rb BLISTA;
        
BLISTA  ::= Concat LISTA BLISTA | ;

DENTRO  ::= COMITAS | ;
COMITAS ::= ELEM | ELEM Coma COMITAS ;
ELEM    ::= Num | LISTA ;


